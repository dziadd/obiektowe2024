

class Produkt{
    String nazwa;
    double cena;
    int iloscNaMagazynie;

    public Produkt(String nazwa, double cena, int iloscNaMagazynie) {
        this.nazwa = nazwa;
        this.cena = cena;
        this.iloscNaMagazynie = iloscNaMagazynie;
    }


    public void wyswietlInformacje(){
        System.out.println(nazwa);
        System.out.println("Cena: " + cena);
        System.out.println("Ilosc na magazynie: " + iloscNaMagazynie);
        System.out.println();
    }


    public void dodajDoMagazynu(int ilosc){
        iloscNaMagazynie += ilosc;
    }

    public void usunZMagazynu(int ilosc){
        if(iloscNaMagazynie - ilosc < 0){
            throw new IllegalArgumentException("Błąd nie ma tylu sztuk na magazynie");
        }
        else {
            iloscNaMagazynie -= ilosc;
        }
    }
}

class KoszykZakupowy{
    private String listaProduktow;
    private int liczbaProduktow;
    private double koszt;

    public KoszykZakupowy(){
        this.listaProduktow = "";
        this.liczbaProduktow = 0;
        this.koszt = 0;
    }

    public void dodajProdukt(Produkt produkt, int ilosc){
        if (produkt.iloscNaMagazynie >= ilosc){
            produkt.usunZMagazynu(ilosc);

            if(!listaProduktow.isEmpty()){
                listaProduktow += ", ";
            }
            listaProduktow += produkt.nazwa + " x" + ilosc;
            koszt += produkt.cena * ilosc;
            liczbaProduktow += ilosc;
        }
        else {
            System.out.println("Błąd nie wystarczajaca ilosc na magazynie");
        }
    }

    public void wyswietlZawartoscKoszyka(){
        System.out.println("Zawartość koszyka: ");
        System.out.println(listaProduktow);
        System.out.println("Liczba produktow w koszyku: " + liczbaProduktow);
        System.out.println("Całkowity koszt: " + koszt);
        System.out.println();
    }

    public double obliczCalkowitaWartosc(){
        return koszt;
    }

    public int liczbaProduktowwkoszyku(){
        return liczbaProduktow;
    }

}

class Zamowienie{
    private KoszykZakupowy koszykZakupowy;
    private String status;

    public Zamowienie(KoszykZakupowy koszykZakupowy, String status){
        this.koszykZakupowy = koszykZakupowy;
        this.status = status;
    }

    public void ustawStatusZamowienia(String nowystatus){
        this.status = nowystatus;
    }

    public void wyswietlZamowienie(){
        koszykZakupowy.wyswietlZawartoscKoszyka();
        System.out.println("Status zamowienia: " + status);
        System.out.println();
    }

}







public class Main {
    public static void main(String[] args) {

        Produkt leh = new Produkt("Leh", 4.50, 34);
        Produkt lomza = new Produkt("Łomża", 3.5, 23);
        Produkt zubr = new Produkt("Żubr", 2.5, 15);

        leh.wyswietlInformacje();
        lomza.wyswietlInformacje();
        zubr.wyswietlInformacje();

        lomza.dodajDoMagazynu(2);
        lomza.wyswietlInformacje();

        leh.dodajDoMagazynu(5);
        leh.wyswietlInformacje();

        zubr.usunZMagazynu(2);
        zubr.wyswietlInformacje();


        KoszykZakupowy koszyk = new KoszykZakupowy();
        koszyk.dodajProdukt(leh, 1);
        koszyk.dodajProdukt(lomza, 10);
        koszyk.dodajProdukt(zubr, 1);
        koszyk.wyswietlZawartoscKoszyka();

        zubr.wyswietlInformacje();

        KoszykZakupowy koszyk2 = new KoszykZakupowy();
        koszyk2.dodajProdukt(lomza, 12);
        koszyk2.wyswietlZawartoscKoszyka();

        Zamowienie zamowienie = new Zamowienie(koszyk, "Oczekujące");
        zamowienie.wyswietlZamowienie();
        zamowienie.ustawStatusZamowienia("Wylane");
        zamowienie.wyswietlZamowienie();







    }
}
